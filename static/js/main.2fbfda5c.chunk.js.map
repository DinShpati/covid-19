{"version":3,"sources":["components/nav.js","components/Loader.js","components/Finder.js","components/Map.js","components/Charts.js","components/Stats.js","components/Dua.js","components/About.js","App.js","index.js"],"names":["Nav","className","to","ShowDetail","data2","require","App","props","state","confirmed","recovered","deaths","countries","loading","getCountryData","bind","this","getData","Axios","get","resApi","resCountries","i","data","length","push","name","setState","value","e","option","target","res","response","status","obj","totalConfirmed","totalRecovered","totalDeaths","provinceState","console","log","map","country","key","dataz","Loader","isLoading","src","alt","style","maxWidth","onChange","renderCountryOptions","class","renderStatesOptions","React","Component","timer","ms","Promise","setTimeout","hasOneDayPassed","date","Date","toLocaleDateString","localStorage","yourapp_date","mapboxgl","accessToken","Map","lng","lat","zoom","center","countrylong","countrylat","colorArr","countryCordList","container","mapContainer","j","inputValue","l","latlng","fetch","then","json","undefined","Marker","color","setLngLat","addTo","err","ref","el","Chart","chartData","labels","datasets","label","backgroundColor","globalPieData","totalLineChart","borderColor","fill","USConfirmed","italyConfirmed","franceConfirmed","germanyConfirmed","spainConfirmed","options","maintainAspectRatio","title","display","displayTitle","text","fontSize","fontColor","legend","displayLegend","position","legendPosition","defaultProps","countriesConfirmed","countriesRecovered","countriesDeaths","top10Countries","top10Confirmed","confirmedCases","sort","a","b","top10","slice","Math","max","countryPosition","current","top10Names","Dua","About","align","path","exact","component","Finder","Stats","ReactDOM","render","document","getElementById"],"mappings":"sllCAkBeA,MAdf,WACI,OACI,6BACI,wBAAIC,UAAU,sBACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAW,uBAAGA,UAAU,0BAA4B,6BAA3E,aACA,kBAAC,IAAD,CAAMC,GAAG,OAAOD,UAAU,YAAW,uBAAGA,UAAU,0BAA4B,6BAA9E,OACA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAAW,uBAAGA,UAAU,sBAAwB,6BAA5E,cACA,kBAAC,IAAD,CAAMC,GAAG,OAAOD,UAAU,YAAW,uBAAGA,UAAU,kBAAoB,6BAAtE,OACA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAAW,uBAAGA,UAAU,gBAAkB,6BAAtE,Y,+CCADE,MATf,WACE,OACE,yBAAKF,UAAU,iBACb,+DACA,uBAAGA,UAAU,0BCHbG,EAAQC,EAAQ,KAGDC,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAKVC,MAAQ,CACJC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,UAAW,GACXC,SAAS,GART,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAHR,E,0KAedC,KAAKC,U,4QA2BgBC,IAAMC,IAAI,kC,cAAzBC,E,gBACqBF,IAAMC,IAAI,4C,OAErC,IAFME,E,OACAT,EAAY,GACVU,EAAI,EAAGA,EAAID,EAAaE,KAAKX,UAAUY,OAAQF,IAEnDV,EAAUa,KAAKJ,EAAaE,KAAKX,UAAUU,GAAGI,MAGlDV,KAAKW,SAAS,CACVlB,UAAWW,EAAOG,KAAKd,UAAUmB,MACjClB,UAAWU,EAAOG,KAAKb,UAAUkB,MACjCjB,OAAQS,EAAOG,KAAKZ,OAAOiB,MAC3BhB,UAAWA,IAGfI,KAAKW,SAAS,CACVd,SAAS,I,qLAIIgB,G,0FAEbC,EAASD,EAAEE,OAAOH,MAEA,cAAnBC,EAAEE,OAAOH,M,yCACDZ,KAAKC,W,gCAIMC,IAAMC,IAAN,mDAAsDU,EAAEE,OAAOH,Q,OAA3EI,E,OACNhB,KAAKW,SAAS,CACVlB,UAAWuB,EAAIT,KAAKd,UAAUmB,MAC9BlB,UAAWsB,EAAIT,KAAKb,UAAUkB,MAC9BjB,OAAQqB,EAAIT,KAAKZ,OAAOiB,Q,kDAGD,MAAxB,KAAIK,SAASC,QACZlB,KAAKW,SAAS,CACVlB,UAAW,oBACXC,UAAW,oBACXC,OAAQ,sB,QAKRW,EAAI,E,aAAGA,EAAIlB,EAAMoB,Q,oBACrBR,KAAKW,SAAS,CACVd,SAAS,IAETsB,EAAM/B,EAAMkB,GAEbQ,GAAUK,EAAIT,K,kCAEKR,IAAMC,IAAN,0D,QAKlB,IALMa,E,OACFI,EAAiB,EACjBC,EAAiB,EACjBC,EAAc,EAEVhB,EAAG,EAAGA,EAAIU,EAAIT,KAAKC,OAAQF,IAC5BU,EAAIT,KAAKD,GAAGiB,eAAiBT,IAC5BM,GAAkBJ,EAAIT,KAAKD,GAAGb,UAC9B4B,GAAkBL,EAAIT,KAAKD,GAAGZ,UAC9B4B,GAAeN,EAAIT,KAAKD,GAAGX,OAC3B6B,QAAQC,IAAIT,EAAIT,KAAKD,GAAGb,YAIX,GAAlB2B,EACCA,EAAiB,oBACG,GAAfE,EACLA,EAAc,oBACS,GAAlBD,IACLA,EAAiB,qBAGrBrB,KAAKW,SAAS,CACVlB,UAAW2B,EACX1B,UAAW2B,EACX1B,OAAQ2B,I,QAIhBtB,KAAKW,SAAS,CACVd,SAAS,I,QAtCgBS,I,8KA4CrC,OAAON,KAAKR,MAAMI,UAAU8B,KAAI,SAACC,EAASrB,GAC1C,OAAO,4BAAQsB,IAAKtB,GAAKqB,Q,4CAKzB,OAAOvC,EAAMsC,KAAI,SAACG,EAAOvB,GACzB,OAAO,4BAAQsB,IAAKtB,GAAKuB,EAAMnB,W,kCAK/B,GAAIV,KAAKR,MAAMK,QAAU,OAAO,kBAACiC,EAAD,Q,+BAIhC,OACQ,yBAAK7C,UAAU,aACVe,KAAK+B,YACN,wBAAI9C,UAAU,cAAa,yBAAK+C,IAAI,mGAAmGC,IAAI,IAAIC,MAAO,CAACC,SAAU,UAAjK,oBAEA,4BAAQzB,KAAK,GAAGzB,UAAU,WAAWmD,SAAUpC,KAAKF,gBAChD,4BAAQc,MAAM,aAAd,aACA,4BAAQA,MAAM,MAAd,OACCZ,KAAKqC,uBACN,4BAAQzB,MAAM,YAAY0B,MAAM,gBAAhC,qBACCtC,KAAKuC,uBAEV,yBAAKtD,UAAU,QACX,yBAAKA,UAAU,iBACX,gDACA,4BAAKe,KAAKR,MAAMC,YAEpB,yBAAKR,UAAU,cACX,6CACA,4BAAKe,KAAKR,MAAMC,WAAaO,KAAKR,MAAME,UAAYM,KAAKR,MAAMG,UAEnE,yBAAKV,UAAU,iBACX,gDACA,4BAAKe,KAAKR,MAAME,YAEpB,yBAAKT,UAAU,cACX,6CACA,4BAAKe,KAAKR,MAAMG,e,GAhLX6C,IAAMC,W,iBCDjCrD,EAAQC,EAAQ,KAItB,SAASqD,EAAMC,GACX,OAAO,IAAIC,SAAQ,SAAA5B,GAAG,OAAI6B,WAAW7B,EAAK2B,MAG9C,SAASG,IAEP,IAAIC,GAAO,IAAIC,MAAOC,qBAAuB,EAI7C,OAAIC,aAAaC,eAAiBJ,IAIlCG,aAAaC,aAAeJ,GACrB,GAjBTK,IAASC,YAAc,+F,IAoBFC,E,4MAEjB9D,MAAQ,CACJC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,UAAW,GACX2D,IAAK,EACLC,IAAK,GACLC,KAAM,IACNC,OAAQ,CAAC,EAAG,IACZC,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,gBAAiB,GACjBjE,SAAS,G,4KAITG,KAAKC,U,iSAIgBC,IAAMC,IAAI,kC,cAAzBC,E,gBACqBF,IAAMC,IAAI,4C,OAErC,IAFME,E,OACAT,EAAY,GACVU,EAAI,EAAGA,EAAID,EAAaE,KAAKX,UAAUY,OAAQF,IAEnDV,EAAUa,KAAKJ,EAAaE,KAAKX,UAAUU,GAAGI,MAoBlD,IAjBAV,KAAKW,SAAS,CACVlB,UAAWW,EAAOG,KAAKd,UAAUmB,MACjClB,UAAWU,EAAOG,KAAKb,UAAUkB,MACjCjB,OAAQS,EAAOG,KAAKZ,OAAOiB,MAC3BhB,UAAWA,IAIT8B,EAAM,IAAI0B,IAASE,IAAI,CACzBS,UAAW/D,KAAKgE,aAChB9B,MAAO,kCACPwB,OAAQ1D,KAAKR,MAAMkE,OACnBD,KAAMzD,KAAKR,MAAMiE,OAEfE,EAAc,GACdC,EAAa,GACbE,EAAkB,GAChBG,EAAI,EAAGA,EAAIjE,KAAKR,MAAMI,UAAUY,OAAQyD,IAE5C,IADIC,EAAalE,KAAKR,MAAMI,UAAUqE,GAC9BE,EAAI,EAAGA,EAAI/E,EAAMoB,OAAQ2D,IAC1BD,IAAe9E,EAAM+E,GAAGzD,OACvBiD,EAAYlD,KAAKrB,EAAM+E,GAAGC,OAAO,IACjCR,EAAWnD,KAAKrB,EAAM+E,GAAGC,OAAO,IAChCN,EAAgBrD,KAAKT,KAAKR,MAAMI,UAAUqE,K,GAMtDjE,KAAKW,SAAS,CACVgD,YAAaA,EACbC,WAAYA,EACZE,gBAAiBA,IAIrB9D,KAAKW,SAAS,CACVd,SAAS,KAIViD,I,0IACGe,EAAW,G,uBACTvD,G,iFAEE+D,MAAM,4CAAD,OAA6C,EAAK7E,MAAMsE,gBAAgBxD,KAAMgE,MACrF,SAAArD,GAAQ,OAAIA,EAASsD,UAAQD,MACzB,SAAA/D,GACA,IAEI,IAAMd,EAAYc,EAAKd,UAAUmB,MAEhB,OAAdnB,QAAoC+E,IAAd/E,EACrBoE,EAASpD,KAAK,QAGXhB,GAAa,KACZoE,EAASpD,KAAK,WACd,IAAI2C,IAASqB,OAAO,CAChBC,MAAO,YAEVC,UAAU,CAAC,EAAKnF,MAAMmE,YAAYrD,GAAI,EAAKd,MAAMoE,WAAWtD,KAC5DsE,MAAMlD,IAEFjC,GAAa,KAClBoE,EAASpD,KAAK,WACd,IAAI2C,IAASqB,OAAO,CAChBC,MAAO,YAEVC,UAAU,CAAC,EAAKnF,MAAMmE,YAAYrD,GAAI,EAAKd,MAAMoE,WAAWtD,KAC5DsE,MAAMlD,IAEFjC,GAAa,KAClBoE,EAASpD,KAAK,WACd,IAAI2C,IAASqB,OAAO,CAChBC,MAAO,YAEVC,UAAU,CAAC,EAAKnF,MAAMmE,YAAYrD,GAAI,EAAKd,MAAMoE,WAAWtD,KAC5DsE,MAAMlD,IAEFjC,GAAa,KAClBoE,EAASpD,KAAK,WACd,IAAI2C,IAASqB,OAAO,CAChBC,MAAO,YAEVC,UAAU,CAAC,EAAKnF,MAAMmE,YAAYrD,GAAI,EAAKd,MAAMoE,WAAWtD,KAC5DsE,MAAMlD,IAEFjC,GAAa,KAClBoE,EAASpD,KAAK,WACd,IAAI2C,IAASqB,OAAO,CAChBC,MAAO,YAEVC,UAAU,CAAC,EAAKnF,MAAMmE,YAAYrD,GAAI,EAAKd,MAAMoE,WAAWtD,KAC5DsE,MAAMlD,KAGPmC,EAASpD,KAAK,QACd,IAAI2C,IAASqB,OAAO,CAChBC,MAAO,SAEVC,UAAU,CAAC,EAAKnF,MAAMmE,YAAYrD,GAAI,EAAKd,MAAMoE,WAAWtD,KAC5DsE,MAAMlD,IAIlB,MAAMmD,GACHrD,QAAQC,IAAIoD,GACZhB,EAASpD,KAAK,Y,uBAKhBiC,EAAM,K,0CAtEZpC,EAAI,E,YAAGA,EAAI,EAAKd,MAAMmE,YAAYnD,Q,yCAAlCF,G,eAA0CA,I,sBAwElD,EAAKK,SAAS,CACVkD,SAAUA,I,6DAKY7D,KAAKR,MAAMqE,S,8PAmBjCf,I,0CAA0B,G,OAGxBe,EAAW,GACTvD,EAAI,E,YAAGA,EAAIN,KAAKR,MAAMmE,YAAYnD,Q,wBAEtC6D,MAAM,4CAAD,OAA6CrE,KAAKR,MAAMsE,gBAAgBxD,KAAMgE,MAC/E,SAAArD,GAAQ,OAAIA,EAASsD,UAAQD,MACzB,SAAA/D,GACA,IAEI,IAAMd,EAAYc,EAAKd,UAAUmB,MACjCY,QAAQC,IAAIhC,GAEK,OAAdA,QAAoC+E,IAAd/E,EACrBoE,EAASpD,KAAK,QAGXhB,GAAa,IACZoE,EAASpD,KAAK,WACThB,GAAa,IAClBoE,EAASpD,KAAK,WACThB,GAAa,IAClBoE,EAASpD,KAAK,WACThB,GAAa,IAClBoE,EAASpD,KAAK,WACThB,GAAa,IAClBoE,EAASpD,KAAK,WAEdoD,EAASpD,KAAK,QAGzB,MAAMoE,GACHrD,QAAQC,IAAIoD,O,SAIdnC,EAAM,K,OAjC8BpC,I,uBAmClDN,KAAKW,SAAS,CACVkD,SAAUA,I,yIAKd,GAAI7D,KAAKR,MAAMK,QAAU,OAAO,kBAACiC,EAAD,Q,+BAG3B,IAAD,OACJ,OACI,yBAAK7C,UAAU,aACX,wBAAIA,UAAU,cAAa,yBAAK+C,IAAI,mGAAmGC,IAAI,IAAIC,MAAO,CAACC,SAAU,UAAjK,gBACA,6BACCnC,KAAK+B,YACN,yBAAK9C,UAAU,cAEf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,YAAd,8BACA,6BACA,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACP,yBAAKA,UAAU,UAAc,wBAAIA,UAAU,eAAd,eAEjC,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WAAe,wBAAIA,UAAU,eAAd,eAElC,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WAAe,wBAAIA,UAAU,eAAd,cAElC,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WAAe,wBAAIA,UAAU,eAAd,cAElC,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WAAe,wBAAIA,UAAU,eAAd,aAElC,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WAAe,wBAAIA,UAAU,eAAd,cAK1C,yBAAK6F,IAAK,SAAAC,GAAE,OAAI,EAAKf,aAAee,GAAI9F,UAAU,uB,GA7PjCuD,IAAMC,W,QCrBjCuC,E,kDAEF,WAAYzF,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTyF,UAAU,CACNC,OAAQ,CAAC,MAAO,QAAS,SAAU,UAAW,SAC9CC,SAAS,CACL,CACIC,MAAO,YACP7E,KAAK,CACD,IAAQ,IAAQ,IAAQ,IAAO,MAEnC8E,gBAAiB,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,6BAKlIjE,eAAgB,EAChBC,eAAgB,EAChBC,YAAa,EACbzB,SAAS,EACTD,UAAW,GAEX0F,cAAc,CACVJ,OAAQ,CAAC,SAAU,YAAa,UAChCC,SAAS,CACL,CACIC,MAAO,eACP7E,KAAK,CACD,EAAG,EAAG,GAEV8E,gBAAiB,CAAC,4BAA6B,2BAA4B,4BAKvFE,eAAe,CACXL,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OACzFC,SAAU,CACR,CACEC,MAAO,sBACPI,YAAa,UACbjF,KAAM,CAAC,GAAI,GAAI,GAAI,IACnBkF,MAAM,MA3CJ,E,gEAqDdzF,KAAKC,Y,0KAIgBC,IAAMC,IAAI,kC,cAAzBC,E,gBACoBF,IAAMC,IAAI,+C,cAA9BuF,E,gBACuBxF,IAAMC,IAAI,kD,cAAjCwF,E,iBACwBzF,IAAMC,IAAI,mD,eAAlCyF,E,iBACyB1F,IAAMC,IAAI,oD,eAAnC0F,E,iBACuB3F,IAAMC,IAAI,kD,QAAjC2F,E,OAGN9F,KAAKR,MAAMyF,UAAUE,SAAS,GAAG5E,KAAK,GAAKmF,EAAYnF,KAAKd,UAAUmB,MACtEZ,KAAKR,MAAMyF,UAAUE,SAAS,GAAG5E,KAAK,GAAKoF,EAAepF,KAAKd,UAAUmB,MACzEZ,KAAKR,MAAMyF,UAAUE,SAAS,GAAG5E,KAAK,GAAKqF,EAAgBrF,KAAKd,UAAUmB,MAC1EZ,KAAKR,MAAMyF,UAAUE,SAAS,GAAG5E,KAAK,GAAKsF,EAAiBtF,KAAKd,UAAUmB,MAC3EZ,KAAKR,MAAMyF,UAAUE,SAAS,GAAG5E,KAAK,GAAKuF,EAAevF,KAAKd,UAAUmB,MAGzEZ,KAAKR,MAAM8F,cAAcH,SAAS,GAAG5E,KAAK,GAAKH,EAAOG,KAAKb,UAAUkB,MACrEZ,KAAKR,MAAM8F,cAAcH,SAAS,GAAG5E,KAAK,GAAKH,EAAOG,KAAKZ,OAAOiB,MAClEZ,KAAKR,MAAM8F,cAAcH,SAAS,GAAG5E,KAAK,GAAKH,EAAOG,KAAKd,UAAUmB,OAASZ,KAAKR,MAAM8F,cAAcH,SAAS,GAAG5E,KAAK,GAAKP,KAAKR,MAAM8F,cAAcH,SAAS,GAAG5E,KAAK,IAEvKP,KAAKW,SAAS,CAEVd,SAAS,I,sIAYb,OACI,yBAAKZ,UAAU,SACX,kBAAC,IAAD,CACIsB,KAAMP,KAAKR,MAAM8F,cAGjBS,QAAS,CAAEC,qBAAqB,EACtBC,MAAM,CACFC,QAASlG,KAAKT,MAAM4G,aACpBC,KAAM,eACNC,SAAU,GACVC,UAAW,SAEfC,OAAO,CACHL,QAASlG,KAAKT,MAAMiH,cACpBC,SAAUzG,KAAKT,MAAMmH,mBAIvC,6BACA,kBAAC,IAAD,CACInG,KAAMP,KAAKR,MAAMyF,UAGjBc,QAAS,CAAEC,qBAAqB,EACtBC,MAAM,CACFC,QAASlG,KAAKT,MAAM4G,aACpBC,KAAM,qCACNC,SAAU,GACVC,UAAW,SAEfC,OAAO,CACHL,SAAS,EACTO,SAAUzG,KAAKT,MAAMmH,mBAIvC,kC,GAjIIjE,aAAduC,EAqFK2B,aAAe,CAClBR,cAAc,EACdK,eAAe,EACfE,eAAgB,SAmET1B,QC5JM1F,E,4MAEjBE,MAAQ,CACJC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,UAAW,GACXgH,mBAAoB,GACpBC,mBAAoB,GACpBC,gBAAiB,GACjBC,eAAgB,GAChBC,eAAgB,GAChBnH,SAAS,G,4KAITG,KAAKC,UACLD,KAAKF,iB,4QAIgBI,IAAMC,IAAI,kC,cAAzBC,E,gBACqBF,IAAMC,IAAI,4C,OAErC,IAFME,E,OACAT,EAAY,GACVU,EAAI,EAAGA,EAAID,EAAaE,KAAKX,UAAUY,OAAQF,IAEnDV,EAAUa,KAAKJ,EAAaE,KAAKX,UAAUU,GAAGI,MAGlDV,KAAKW,SAAS,CACVlB,UAAWW,EAAOG,KAAKd,UAAUmB,MACjClB,UAAWU,EAAOG,KAAKb,UAAUkB,MACjCjB,OAAQS,EAAOG,KAAKZ,OAAOiB,MAC3BhB,UAAWA,IAIfI,KAAKW,SAAS,CACVd,SAAS,I,oRAMP+G,EAAqB,GACrBC,EAAqB,GACrBC,EAAkB,GAEhBxG,EAAI,E,YAAGA,EAAI,K,0CAEOJ,IAAMC,IAAN,mDAAsDH,KAAKR,MAAMI,UAAUU,K,OAAvFU,E,OACN4F,EAAmBnG,KAAKO,EAAIT,KAAKd,UAAUmB,OAC3CiG,EAAmBpG,KAAKO,EAAIT,KAAKb,UAAUkB,OAC3CkG,EAAgBrG,KAAKO,EAAIT,KAAKZ,OAAOiB,O,kDAGV,MAAxB,KAAIK,SAASC,SACR0F,EAAmBnG,KAAK,OACxBmG,EAAmBnG,KAAK,OACxBmG,EAAmBnG,KAAK,Q,QAXhBH,I,uBA+BxB,IAfAN,KAAKW,SAAS,CACViG,mBAAoBA,EACpBC,mBAAoBA,EACpBC,gBAAiBA,KAIfG,EAAiB,IACRxG,KAAf,MAAAwG,EAAuBL,GACvBK,EAAeC,MAAK,SAASC,EAAGC,GAAG,OAAOD,EAAEC,KAExC5G,EAASyG,EAAezG,OACxB6G,EAAQJ,EAAeK,MAAMC,KAAKC,IAAIhH,EAAS,GAAI,IACjDiH,EAAkB,GAEhBnH,EAAI,EAAGA,EAAIN,KAAKR,MAAMoH,mBAAmBpG,OAAQF,IAErD,IADIoH,EAAU1H,KAAKR,MAAMoH,mBAAmBtG,GACpC2D,EAAI,EAAGA,EAAIoD,EAAM7G,OAAQyD,IAC1ByD,IAAYL,EAAMpD,IACjBwD,EAAgBhH,KAAKH,GAKjCN,KAAKW,SAAS,CACVoG,eAAgBU,I,6JAgBpB,IAAIJ,EACJA,EAAQrH,KAAKR,MAAMuH,eAQnB,IANA,IAAIY,EAAa,GACbX,EAAiB,GAKb1G,EAAI,EAAGA,EAAI+G,EAAM7G,OAAQF,IAC7BkB,QAAQC,IAAI4F,EAAM/G,IAClBqH,EAAWlH,KAAKT,KAAKR,MAAMI,UAAUyH,EAAM/G,KAC3C0G,EAAevG,KAAKT,KAAKR,MAAMoH,mBAAmBS,EAAM/G,KAY5D,MAjBkB,K,kCAwBlB,GAAIN,KAAKR,MAAMK,QAAU,OAAO,kBAACiC,EAAD,Q,+BAIhC,OACQ,yBAAK7C,UAAU,aACVe,KAAK+B,YACN,wBAAI9C,UAAU,cAAa,yBAAK+C,IAAI,mGAAmGC,IAAI,IAAIC,MAAO,CAACC,SAAU,UAAjK,SAEA,yBAAKlD,UAAU,cACX,yBAAK+C,IAAI,oCAAoCC,IAAI,QAAQhD,UAAU,eACnE,6BACA,wBAAIA,UAAU,kBAEV,6BACA,kBAAC,EAAD,a,GAvJKuD,IAAMC,WCHlBmF,E,uKAIb,OACI,yBAAK3I,UAAU,aACX,wBAAIA,UAAU,cAAa,yBAAK+C,IAAI,mGAAmGC,IAAI,IAAIC,MAAO,CAACC,SAAU,UAAjK,sBACA,yBAAKlD,UAAU,cACX,wBAAIA,UAAU,cAAd,+GACA,6BAAK,6BAAK,6BACV,wBAAIA,UAAU,OAAd,6uBACA,6BAAK,6BAAK,6BACV,wBAAIA,UAAU,QAAd,iIACA,6BAAK,6BAAK,6BACV,wBAAIA,UAAU,QAAd,8HACA,6BAAK,6BACL,6BAAK,6BACL,wBAAIA,UAAU,cAAd,8BAA0D,6BAC1D,6BACA,6BACA,wBAAIA,UAAU,QAAd,qQACA,6BACA,6BACA,6BACA,wBAAIA,UAAU,QAAd,qRAEJ,6BACA,6BACA,6BACA,6BACA,6BACA,kC,GA/BiBuD,IAAMC,WCAlBoF,E,uKAIb,OACI,yBAAK5I,UAAU,aACX,wBAAIA,UAAU,cAAa,yBAAK+C,IAAI,mGAAmGC,IAAI,IAAIC,MAAO,CAACC,SAAU,UAAjK,UACA,yBAAKlD,UAAU,aAAa6I,MAAM,QAC9B,6BACA,6BACA,wBAAI7I,UAAU,eAAd,4TACA,6BACA,wBAAIA,UAAU,eAAd,mEACA,6BACA,wBAAIA,UAAU,eAAd,wBACA,wBAAIA,UAAU,eAAd,qBACA,6BACA,6BACA,6BACA,6BACA,8BAEJ,6BACA,6BACA,6BACA,6BACA,6BACA,kC,GA3BmBuD,IAAMC,W,QCQpBnD,E,uKAGb,OACI,kBAAC,IAAD,KACI,yBAAKL,UAAU,aACX,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8I,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,OAAOE,UAAW3E,IAC9B,kBAAC,IAAD,CAAOyE,KAAK,SAASE,UAAWE,IAChC,kBAAC,IAAD,CAAOJ,KAAK,OAAOE,UAAWL,IAC9B,kBAAC,IAAD,CAAOG,KAAK,SAASE,UAAWJ,W,GAbvBrF,IAAMC,WCLvC2F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2fbfda5c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style.css';\n\nfunction Nav(){\n    return(\n        <nav>\n            <ul className=\"nav-link-container\">\n                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-globe-americas\"></i><br/>Countries</Link>\n                <Link to=\"/map\" className=\"nav-link\"><i className=\"fas fa-map-marked-alt\"></i><br/>Map</Link>\n                <Link to=\"/stats\" className=\"nav-link\"><i className=\"fas fa-chart-line\"></i><br/>Statistics</Link>\n                <Link to=\"/dua\" className=\"nav-link\"><i className=\"fas fa-mosque\"></i><br/>Dua</Link>\n                <Link to=\"/about\" className=\"nav-link\"><i className=\"far fa-user\"></i><br/>About</Link>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport '../style.css';\n\nfunction ShowDetail() {\n  return (\n    <div className=\"loader center\">\n      <h3>Please wait...Gathering data...</h3>\n      <i className=\"fa fa-virus fa-spin\" />\n    </div>\n  );\n}\n\nexport default ShowDetail;","import React from 'react';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport '../style.css';\nconst data2 = require('../states.json');\n\n\nexport default class App extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.getCountryData = this.getCountryData.bind(this);\n    }\n\n    state = {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        countries: [],\n        loading: true\n    }\n\n    async componentDidMount(){\n        this.getData();\n        // this.getCords();\n    }\n\n    // async getCords(){\n    //     const countrylong = [];\n    //     const countrylat = [];\n\n    //     for(var i = 0; i < this.state.countries.length; i++){\n            \n    //         var currentCountry = this.state.countries[i];\n    //         const res = await Axios.get(\"https://coronavirus-tracker-api.herokuapp.com/v2/locations?source=jhu&country=\" + currentCountry);\n\n    //         countrylong.push(res.locations[0].coordinates.longitude);\n    //         countrylat.push(res.locations[0].coordinates.latitude);\n    //     }\n\n    //     this.setState({\n    //         countrylong: countrylong,\n    //         countrylat: countrylat\n\n    //     });\n        \n    // }\n\n\n    async getData(){\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\n        const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n        const countries = [];\n        for(var i = 0; i < resCountries.data.countries.length; i++){\n            \n            countries.push(resCountries.data.countries[i].name);\n        }\n\n        this.setState({\n            confirmed: resApi.data.confirmed.value,\n            recovered: resApi.data.recovered.value,\n            deaths: resApi.data.deaths.value,\n            countries: countries\n        });\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    async getCountryData(e){\n\n        var option = e.target.value;\n\n        if(e.target.value === \"Worldwide\"){\n            return this.getData();\n        }\n\n        try{\n            const res = await Axios.get(`https://covid19.mathdro.id/api/countries/${e.target.value}`);\n            this.setState({\n                confirmed: res.data.confirmed.value,\n                recovered: res.data.recovered.value,\n                deaths: res.data.deaths.value\n            });\n        }catch(err){\n            if(err.response.status === 404){\n                this.setState({\n                    confirmed: \"No Data Available\",\n                    recovered: \"No Data Available\",\n                    deaths: \"No Data Available\"\n                });\n            }\n        }\n\n            for(var i = 0; i < data2.length; i++){\n                this.setState({\n                    loading: true\n                });\n                var obj = data2[i];\n\n                if(option == obj.name){\n\n                    const res = await Axios.get(`https://covid19.mathdro.id/api/countries/US/confirmed/`);\n                    let totalConfirmed = 0;\n                    let totalRecovered = 0;\n                    let totalDeaths = 0;\n\n                    for(let i =0; i < res.data.length; i++){\n                        if(res.data[i].provinceState == option){\n                            totalConfirmed += res.data[i].confirmed;\n                            totalRecovered += res.data[i].recovered;\n                            totalDeaths += res.data[i].deaths;\n                            console.log(res.data[i].confirmed);\n                        }\n                    }\n\n                    if(totalConfirmed == 0){\n                        totalConfirmed = 'No Data Available';\n                    }else if(totalDeaths == 0){\n                        totalDeaths = 'No Data Available';\n                    }else if(totalRecovered == 0){\n                        totalRecovered = 'No Data Available';\n                    }\n\n                    this.setState({\n                        confirmed: totalConfirmed,\n                        recovered: totalRecovered,\n                        deaths: totalDeaths\n                    });\n\n                }\n                this.setState({\n                    loading: false\n                });\n            }\n    }\n\n    renderCountryOptions(){\n        return this.state.countries.map((country, i) => {\n        return <option key={i}>{ country }</option>\n        });\n    }\n\n    renderStatesOptions(){\n        return data2.map((dataz, i) => {\n        return <option key={i}>{ dataz.name }</option>\n        });\n    }\n\n    isLoading(){\n        if (this.state.loading) {return <Loader />}\n    }   \n\n    render(){\n        return (\n                <div className=\"container\">\n                    {this.isLoading()}\n                    <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Covid-19 Tracker</h1>\n\n                    <select name=\"\" className=\"dropDown\" onChange={this.getCountryData}>\n                        <option value=\"Worldwide\">Worldwide</option>\n                        <option value=\"US\">USA</option>\n                        {this.renderCountryOptions()}\n                        <option value=\"worldwide\" class='usaSelection'>Search USA States</option>\n                        {this.renderStatesOptions()}\n                    </select>\n                    <div className=\"flex\">\n                        <div className=\"box confirmed\">\n                            <h3>Confirmed cases:</h3>\n                            <h4>{this.state.confirmed}</h4>\n                        </div>\n                        <div className=\"box active\">\n                            <h3>Active cases:</h3>\n                            <h4>{this.state.confirmed - (this.state.recovered + this.state.deaths)}</h4>\n                        </div>\n                        <div className=\"box recovered\">\n                            <h3>Recovered cases:</h3>\n                            <h4>{this.state.recovered}</h4>\n                        </div>\n                        <div className=\"box deaths\">\n                            <h3>Deaths cases:</h3>\n                            <h4>{this.state.deaths}</h4>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}","import React from 'react';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport mapboxgl from 'mapbox-gl';\nimport '../style.css';\n\nconst data2 = require('../countries.json');\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZGluc2hwYXRpIiwiYSI6ImNqamRmMmVmNzN2ODQza3I1OWRnbDR0ODIifQ.ah5q68mTKeffMEh8C2zNYQ';\n\nfunction timer(ms) {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nfunction hasOneDayPassed(){\n  // get today's date. eg: \"7/37/2007\"\n  var date = new Date().toLocaleDateString() - 1;\n\n  // if there's a date in localstorage and it's equal to the above: \n  // inferring a day has yet to pass since both dates are equal.\n  if( localStorage.yourapp_date === date ) \n      return false;\n\n  // this portion of logic occurs when a day has passed\n  localStorage.yourapp_date = date;\n  return true;\n}\n\nexport default class Map extends React.Component {\n\n    state = {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        countries: [],\n        lng: 5,\n        lat: 34,\n        zoom: 1.2,\n        center: [0, 20],\n        countrylong: [],\n        countrylat: [],\n        colorArr: [],\n        countryCordList: [],\n        loading: true\n    }\n\n    async componentDidMount(){\n        this.getData();\n    }\n\n    async getData(){\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\n        const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n        const countries = [];\n        for(var i = 0; i < resCountries.data.countries.length; i++){\n            \n            countries.push(resCountries.data.countries[i].name);\n        }\n\n        this.setState({\n            confirmed: resApi.data.confirmed.value,\n            recovered: resApi.data.recovered.value,\n            deaths: resApi.data.deaths.value,\n            countries: countries\n        });\n\n        //initsilizing the map and getting cordinates\n        const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/dark-v10',\n            center: this.state.center,\n            zoom: this.state.zoom\n        });\n        const countrylong = [];\n        const countrylat = [];\n        const countryCordList = [];\n        for(var j = 0; j < this.state.countries.length; j++){\n            var inputValue = this.state.countries[j];\n            for(var l = 0; l < data2.length; l++){\n                if(inputValue === data2[l].name){\n                    countrylong.push(data2[l].latlng[1]);\n                    countrylat.push(data2[l].latlng[0]);\n                    countryCordList.push(this.state.countries[j]);\n                }\n            }\n            \n        }\n        \n        this.setState({\n            countrylong: countrylong,\n            countrylat: countrylat,\n            countryCordList: countryCordList\n            \n        });\n\n        this.setState({\n            loading: false\n        });\n\n        //run once a day\n        if(hasOneDayPassed()){\n        const colorArr = [];\n        for(let i = 0; i < this.state.countrylong.length; i++){\n\n            await fetch(`https://covid19.mathdro.id/api/countries/${this.state.countryCordList[i]}`).then(\n                response => response.json()).then(\n                    data =>{\n                    try{\n                        \n                        const confirmed = data.confirmed.value;\n\n                        if(confirmed === null || confirmed === undefined){\n                            colorArr.push('grey');\n                        }else{\n\n                            if(confirmed >= 200000){\n                                colorArr.push('#d422cb');\n                                new mapboxgl.Marker({\n                                    color: '#d422cb'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 100000){\n                                colorArr.push('#f43d46');\n                                new mapboxgl.Marker({\n                                    color: '#f43d46'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 50000){\n                                colorArr.push('#da7a3c');\n                                new mapboxgl.Marker({\n                                    color: '#da7a3c'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 10000){\n                                colorArr.push('#cac633');\n                                new mapboxgl.Marker({\n                                    color: '#cac633'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 1000){\n                                colorArr.push('#44a2c2');\n                                new mapboxgl.Marker({\n                                    color: '#44a2c2'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else{\n                                colorArr.push('grey');\n                                new mapboxgl.Marker({\n                                    color: 'grey'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }\n                        }\n                    }catch(err){\n                        console.log(err);\n                        colorArr.push('grey');\n                    }\n                    }\n                );\n\n                await timer(600);\n        }\n        this.setState({\n            colorArr: colorArr\n        });\n\n    }\n\n        const colorArrConfirmed = this.state.colorArr;\n        //const colorArrConfirmed = [\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#da7a3c\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#da7a3c\",\"grey\",\"grey\",\"grey\",\"#da7a3c\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"#f43d46\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#f43d46\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"#f43d46\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"];\n\n        // for(var k = 0; k < this.state.countrylong.length; k++){\n            \n        //     // new mapboxgl.Marker({\n        //     //     color: colorArrConfirmed[k]\n        //     // })\n        //     // .setLngLat([this.state.countrylong[k], this.state.countrylat[k]])\n        //     // .addTo(map);\n        // }\n        // console.log(this.state.colorArr[0]);\n        // console.log(this.state.colorArr);\n\n        \n    }\n\n    async getColors(){\n\n        if(!hasOneDayPassed()){return false}\n\n        //use the buttom to get data \n        const colorArr = [];\n        for(let i = 0; i < this.state.countrylong.length; i++){\n\n            fetch(`https://covid19.mathdro.id/api/countries/${this.state.countryCordList[i]}`).then(\n                response => response.json()).then(\n                    data =>{\n                    try{\n                        \n                        const confirmed = data.confirmed.value;\n                        console.log(confirmed);\n\n                        if(confirmed === null || confirmed === undefined){\n                            colorArr.push('grey');\n                        }else{\n\n                            if(confirmed >= 200000){\n                                colorArr.push('#d422cb');\n                            }else if(confirmed >= 100000){\n                                colorArr.push('#f43d46');\n                            }else if(confirmed >= 50000){\n                                colorArr.push('#da7a3c');\n                            }else if(confirmed >= 10000){\n                                colorArr.push('#cac633');\n                            }else if(confirmed >= 1000){\n                                colorArr.push('#44a2c2');\n                            }else{\n                                colorArr.push('grey');\n                            }\n                        }\n                    }catch(err){\n                        console.log(err);\n                    }\n                    }\n                );\n                await timer(1000);\n        }\n        this.setState({\n            colorArr: colorArr\n        });\n    }\n\n    isLoading(){\n        if (this.state.loading) {return <Loader />}\n    }  \n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Covid-19 Map</h1>\n                <br/>\n                {this.isLoading()}\n                <div className=\"container2\">\n\n                <div className=\"outcome\">\n                <div className=\"mapKeyContainer\">\n                    <h4 className=\"mapTitle\">Number of infected people:</h4>\n                    <br/>\n                    <div className=\"keyHolder\">\n                    <div className=\"mapKeys\">\n                            <div className=\"color\"></div><h4 className=\"numOfPeople\"> > 200,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color1\"></div><h4 className=\"numOfPeople\"> > 100,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color2\"></div><h4 className=\"numOfPeople\"> > 50,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color3\"></div><h4 className=\"numOfPeople\"> > 10,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color5\"></div><h4 className=\"numOfPeople\"> > 1,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color4\"></div><h4 className=\"numOfPeople\"> &#60; 999</h4>\n                        </div>\n                    </div>\n                </div>\n                </div>\n                <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\n\n                </div>\n                \n            </div>\n        );\n    }\n\n}","import React from 'react';\r\nimport Axios from 'axios';\r\nimport Loader from './Loader';\r\nimport {Bar, Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport '../style.css';\r\nimport { Component } from 'react';\r\n\r\nclass Chart extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData:{\r\n                labels: ['USA', 'Italy', 'France', 'Germany', 'Spain'],\r\n                datasets:[\r\n                    {\r\n                        label: 'Confirmed',\r\n                        data:[\r\n                            400000, 100000, 100000, 70000, 120000\r\n                        ],\r\n                        backgroundColor: ['rgba(255, 32, 32, .7)', 'rgba(32, 255, 32, .7)', 'rgba(32, 32, 255, .7)', 'rgba(255, 82, 65, .7)', 'rgba(255, 255, 32, .7)']\r\n                    }\r\n                ]\r\n            },\r\n\r\n            totalConfirmed: 0,\r\n            totalRecovered: 0,\r\n            totalDeaths: 0,\r\n            loading: true,\r\n            countries: [],\r\n\r\n            globalPieData:{\r\n                labels: ['Active', 'Recovered', 'Deaths'],\r\n                datasets:[\r\n                    {\r\n                        label: 'Global Cases',\r\n                        data:[\r\n                            0, 0, 0\r\n                        ],\r\n                        backgroundColor: ['rgba(90, 189, 202, 0.603)', 'rgba(81, 161, 44, 0.603)', 'rgba(223, 71, 71, .9)']\r\n                    }\r\n                ]\r\n            },\r\n\r\n            totalLineChart:{\r\n                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\r\n                datasets: [\r\n                  {\r\n                    label: '2020 COVID-19 Cases',\r\n                    borderColor: '#caf9cf',\r\n                    data: [65, 59, 80, 81],\r\n                    fill: false,\r\n\r\n                  }\r\n                ]\r\n              }\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    async getData() {\r\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\r\n        const USConfirmed = await Axios.get(\"https://covid19.mathdro.id/api/countries/US\");\r\n        const italyConfirmed = await Axios.get(\"https://covid19.mathdro.id/api/countries/italy\");\r\n        const franceConfirmed = await Axios.get(\"https://covid19.mathdro.id/api/countries/france\");\r\n        const germanyConfirmed = await Axios.get(\"https://covid19.mathdro.id/api/countries/germany\");\r\n        const spainConfirmed = await Axios.get(\"https://covid19.mathdro.id/api/countries/spain\");\r\n\r\n        //Bar chart for US, Italy, France, Germany, and Spain\r\n        this.state.chartData.datasets[0].data[0] = USConfirmed.data.confirmed.value;\r\n        this.state.chartData.datasets[0].data[1] = italyConfirmed.data.confirmed.value;\r\n        this.state.chartData.datasets[0].data[2] = franceConfirmed.data.confirmed.value;\r\n        this.state.chartData.datasets[0].data[3] = germanyConfirmed.data.confirmed.value;\r\n        this.state.chartData.datasets[0].data[4] = spainConfirmed.data.confirmed.value;\r\n\r\n        //Global Pie Chart for recovered, active, and dead\r\n        this.state.globalPieData.datasets[0].data[1] = resApi.data.recovered.value;\r\n        this.state.globalPieData.datasets[0].data[2] = resApi.data.deaths.value;\r\n        this.state.globalPieData.datasets[0].data[0] = resApi.data.confirmed.value - (this.state.globalPieData.datasets[0].data[1] + this.state.globalPieData.datasets[0].data[2]);\r\n\r\n        this.setState({\r\n            // countries: countries,\r\n            loading: false\r\n        });\r\n\r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle: true,\r\n        displayLegend: true,\r\n        legendPosition: 'right'\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"chart\">\r\n                <Pie\r\n                    data={this.state.globalPieData}\r\n                    // width={100}\r\n                    // height={50}\r\n                    options={{ maintainAspectRatio: true, \r\n                              title:{\r\n                                  display: this.props.displayTitle,\r\n                                  text: 'Global Cases',\r\n                                  fontSize: 25,\r\n                                  fontColor: 'white'\r\n                              },\r\n                              legend:{\r\n                                  display: this.props.displayLegend,\r\n                                  position: this.props.legendPosition\r\n                              }\r\n                }}\r\n                />\r\n                <br/>\r\n                <Bar\r\n                    data={this.state.chartData}\r\n                    // width={100}\r\n                    // height={50}\r\n                    options={{ maintainAspectRatio: true, \r\n                              title:{\r\n                                  display: this.props.displayTitle,\r\n                                  text: 'Top Countries With Confirmed Cases',\r\n                                  fontSize: 25,\r\n                                  fontColor: 'white'\r\n                              },\r\n                              legend:{\r\n                                  display: false,\r\n                                  position: this.props.legendPosition\r\n                              }\r\n                }}\r\n                />\r\n                <br/>\r\n                {/* <Line\r\n                    data={this.state.totalLineChart}\r\n                    // width={600}\r\n                    // height={250}\r\n                    options={{ maintainAspectRatio: true, \r\n                              title:{\r\n                                  display: this.props.displayTitle,\r\n                                  text: '2020 COVID-19 Cases',\r\n                                  fontSize: 25,\r\n                                  fontColor: 'white'\r\n                              },\r\n                              legend:{\r\n                                  display: this.props.displayLegend,\r\n                                  position: 'top'\r\n                              },\r\n\r\n                }}\r\n                />\r\n                <br/> */}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;","import React from 'react';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport Chart from './Charts'\nimport '../style.css';\n\nexport default class App extends React.Component {\n\n    state = {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        countries: [],\n        countriesConfirmed: [],\n        countriesRecovered: [],\n        countriesDeaths: [],\n        top10Countries: [],\n        top10Confirmed: [],\n        loading: true\n    }\n\n    async componentDidMount(){\n        this.getData();\n        this.getCountryData();\n    }\n\n    async getData(){\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\n        const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n        const countries = [];\n        for(var i = 0; i < resCountries.data.countries.length; i++){\n            \n            countries.push(resCountries.data.countries[i].name);\n        }\n\n        this.setState({\n            confirmed: resApi.data.confirmed.value,\n            recovered: resApi.data.recovered.value,\n            deaths: resApi.data.deaths.value,\n            countries: countries\n        });\n\n        //set loader to false/stop\n        this.setState({\n            loading: false\n        });\n    }\n\n    async getCountryData(){\n\n        const countriesConfirmed = [];\n        const countriesRecovered = [];\n        const countriesDeaths = [];\n\n        for(var i = 0; i < 179; i++){\n            try{\n                const res = await Axios.get(`https://covid19.mathdro.id/api/countries/${this.state.countries[i]}`);\n                countriesConfirmed.push(res.data.confirmed.value);\n                countriesRecovered.push(res.data.recovered.value);\n                countriesDeaths.push(res.data.deaths.value);\n                \n            }catch(err){\n                if(err.response.status === 404){\n                        countriesConfirmed.push(\"NaN\");\n                        countriesConfirmed.push(\"NaN\");\n                        countriesConfirmed.push(\"NaN\");\n                }\n            }\n        }\n\n        this.setState({\n            countriesConfirmed: countriesConfirmed,\n            countriesRecovered: countriesRecovered,\n            countriesDeaths: countriesDeaths\n        });\n\n        //Getting top 10\n        const confirmedCases = [];\n        confirmedCases.push(...countriesConfirmed);\n        confirmedCases.sort(function(a, b){return a-b});\n\n        let length = confirmedCases.length;\n        let top10 = confirmedCases.slice(Math.max(length - 10, 0))\n        const countryPosition = [];\n\n        for(let i = 0; i < this.state.countriesConfirmed.length; i++){\n            let current = this.state.countriesConfirmed[i];\n            for(let j = 0; j < top10.length; j++){\n                if(current === top10[j]){\n                    countryPosition.push(i);\n                }\n            }\n        }\n\n        this.setState({\n            top10Countries: countryPosition//,\n            // top10Confirmed: top10\n        });\n\n        \n    }\n\n    renderCountryOptions(){\n\n        // var top10 = new Array(2);\n        // top10[0] = this.state.top10Countries;\n        // top10[1] = this.state.top10Confirmed;\n        // top10.sort(function(a,b){\n        //     return a[1] - b[1];\n        // });\n\n        var top10 = []\n        top10 = this.state.top10Countries;\n\n        var top10Names = [];\n        var top10Confirmed = [];\n        //var orderedPositions = [];\n        \n        var returnStuff = [];\n        \n        for(let i = 0; i < top10.length; i++){\n            console.log(top10[i]);\n            top10Names.push(this.state.countries[top10[i]]);\n            top10Confirmed.push(this.state.countriesConfirmed[top10[i]]);\n        }\n\n        // for(let i = 0; i < this.state.countriesConfirmed.length; i++){\n        //     for(let j = 0; j < top10.length; j++){\n        //         if(this.state.countriesConfirmed[i] > top10Confirmed[j]){\n        //             console.log(this.state.countriesConfirmed[i] + \" > \" + top10Confirmed[j]);\n        //             console.log(i);\n        //         }\n        //     }\n        // }\n\n        return returnStuff;\n\n    }\n\n    //returnStuff.push(<li className=\"top10\" key={i}>{ this.state.countries[top10[i]] }</li>);\n\n    isLoading(){\n        if (this.state.loading) {return <Loader />}\n    } \n\n    render(){\n        return (\n                <div className=\"container\">\n                    {this.isLoading()}\n                    <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Stats</h1>\n\n                    <div className=\"container3\">\n                        <img src=\"https://covid19.mathdro.id/api/og\" alt=\"graph\" className=\"graphImage\"/>\n                        <hr/>\n                        <ul className=\"top10Container\">\n                            {/* <h2>More comming soon!</h2> */}\n                            <br/>\n                            <Chart />  \n                        </ul>\n                    </div>\n                </div>\n        );\n    }\n}","import React from 'react';\nimport '../style.css';\n\nexport default class Dua extends React.Component {\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Dua / Supplication</h1>\n                <div className=\"container4\">\n                    <h2 className=\"englishDua\">The Prophet Muhammad (May peace of Allah and His blessings be upon him) taught to recite the following Dua:</h2>\n                    <br/><hr/><br/>\n                    <h2 className=\"dua\">“اَللَّهُمُّ إِنِّيْ أَعُوذُ بِكَ مِنَ الْبَرَصِ وَالْجُنُونِ وَالْجُذَامِ، وَمِنْ سَيِّئِ الْأسْقَامِ.”( رَوَاهُ أَبو داود بإِسنادٍ صحيحٍ.)</h2>\n                    <br/><hr/><br/>\n                    <h2 className=\"dua1\">“Allahumma inni a’udhu bika minal-barasi, wal- jununi, wal-judhami, wa sayyi’il-asqaami”. (HR. Abu Dawud)</h2>\n                    <br/><hr/><br/>\n                    <h2 className=\"dua1\">“O Allah! I seek refuge in You from leucoderma [Vitiligo] , insanity, leprosy and evil/bad diseases” (Abu Dawud)</h2>\n                    <br/><br/>\n                    <br/><br/>\n                    <h2 className=\"englishDua\">Hadiths regarding plague: </h2><br/>\n                    <hr/>\n                    <br/>\n                    <h2 className=\"dua1\">The Prophet (may peace of Allah and His blessings be upon him) said, “If you hear of an outbreak of plague in a land, do not enter it; but if the plague breaks out in a place while you are in it, do not leave that place.”  (Reported by Al Bukhari)</h2>\n                    <br/>\n                    <hr/>\n                    <br/>\n                    <h2 className=\"dua1\">The Prophet of Allah (may peace of Allah and His blessings be upon him) said: The one who flees from the plague (infected territory) is like a fugitive from war, but whoever shows patience in that deserves a martyr’s reward. (Reported by Imam Musnad Ahmad ibn Hanbal)</h2>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport '../style.css';\n\nexport default class About extends React.Component {\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>About:</h1>\n                <div className=\"container4\" align='left'>\n                    <br/>\n                    <br/>\n                    <h2 className=\"headerAbout\">This is a covid-19 application that provides free opensource information regarding covid-19. The covid-19 data in this application is sourced from The Center for Systems Science and Engineering at John Hopkins University which is accessed through a Application Programming Interface (API) provided by @mathdroid.</h2>\n                    <br/>\n                    <h2 className=\"headerAbout\">Built with: HTML, CSS, Javascript, ReactJS, MapBox, and Postman</h2>\n                    <br/>\n                    <h2 className=\"headerAbout\">Built by: Din Spataj</h2>\n                    <h2 className=\"headerAbout\">www.dinshpati.com</h2>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            </div>\n        );\n    }\n\n}","import React from \"react\";\nimport \"./style.css\";\nimport Nav from './components/nav';\nimport Finder from './components/Finder';\nimport Map from './components/Map';\nimport Stats from './components/Stats';\nimport Dua from './components/Dua';\nimport About from './components/About';\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom';\n\n\nexport default class App extends React.Component {\n\n    render(){\n        return (\n            <HashRouter>\n                <div className=\"container\">\n                    <Nav />\n                    \n                    <Switch>\n                        <Route path=\"/\" exact component={Finder}/>\n                        <Route path=\"/map\" component={Map}/>\n                        <Route path=\"/stats\" component={Stats}/>\n                        <Route path=\"/dua\" component={Dua}/>\n                        <Route path=\"/about\" component={About}/>\n                    </Switch>\n                </div>\n        </HashRouter>\n        );\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//add to package.json \"homepage\": \"http://http://covid19.dinshpati.com/\",\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}