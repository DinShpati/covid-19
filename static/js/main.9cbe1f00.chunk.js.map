{"version":3,"sources":["components/nav.js","components/Loader.js","components/Finder.js","components/Map.js","components/Stats.js","components/Dua.js","components/About.js","App.js","index.js"],"names":["Nav","className","to","ShowDetail","App","props","state","confirmed","recovered","deaths","countries","loading","getCountryData","bind","this","getData","Axios","get","resApi","resCountries","i","data","length","push","name","setState","value","e","target","res","response","status","map","country","key","Loader","isLoading","src","alt","style","maxWidth","onChange","renderCountryOptions","React","Component","data2","require","timer","ms","Promise","setTimeout","hasOneDayPassed","date","Date","toLocaleDateString","localStorage","yourapp_date","mapboxgl","accessToken","Map","lng","lat","zoom","center","countrylong","countrylat","colorArr","countryCordList","container","mapContainer","j","inputValue","l","latlng","fetch","then","json","undefined","Marker","color","setLngLat","addTo","err","console","log","ref","el","countriesConfirmed","countriesRecovered","countriesDeaths","top10Countries","top10Confirmed","confirmedCases","sort","a","b","top10","slice","Math","max","countryPosition","current","top10Names","Dua","About","align","path","exact","component","Finder","Stats","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cbe1f00.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style.css';\n\nfunction Nav(){\n    return(\n        <nav>\n            <ul className=\"nav-link-container\">\n                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-globe-americas\"></i><br/>Countries</Link>\n                <Link to=\"/map\" className=\"nav-link\"><i className=\"fas fa-map-marked-alt\"></i><br/>Map</Link>\n                <Link to=\"/stats\" className=\"nav-link\"><i className=\"fas fa-chart-line\"></i><br/>Statistics</Link>\n                <Link to=\"/dua\" className=\"nav-link\"><i className=\"fas fa-mosque\"></i><br/>Dua</Link>\n                <Link to=\"/about\" className=\"nav-link\"><i className=\"far fa-user\"></i><br/>About</Link>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport '../style.css';\n\nfunction ShowDetail() {\n  return (\n    <div className=\"loader center\">\n      <h3>Please wait...Gathering data...</h3>\n      <i className=\"fa fa-virus fa-spin\" />\n    </div>\n  );\n}\n\nexport default ShowDetail;","import React from 'react';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport '../style.css';\n\nexport default class App extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.getCountryData = this.getCountryData.bind(this);\n    }\n\n    state = {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        countries: [],\n        loading: true\n    }\n\n    async componentDidMount(){\n        this.getData();\n        // this.getCords();\n    }\n\n    // async getCords(){\n    //     const countrylong = [];\n    //     const countrylat = [];\n\n    //     for(var i = 0; i < this.state.countries.length; i++){\n            \n    //         var currentCountry = this.state.countries[i];\n    //         const res = await Axios.get(\"https://coronavirus-tracker-api.herokuapp.com/v2/locations?source=jhu&country=\" + currentCountry);\n\n    //         countrylong.push(res.locations[0].coordinates.longitude);\n    //         countrylat.push(res.locations[0].coordinates.latitude);\n    //     }\n\n    //     this.setState({\n    //         countrylong: countrylong,\n    //         countrylat: countrylat\n\n    //     });\n        \n    // }\n\n\n    async getData(){\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\n        const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n        const countries = [];\n        for(var i = 0; i < resCountries.data.countries.length; i++){\n            \n            countries.push(resCountries.data.countries[i].name);\n        }\n\n        this.setState({\n            confirmed: resApi.data.confirmed.value,\n            recovered: resApi.data.recovered.value,\n            deaths: resApi.data.deaths.value,\n            countries: countries\n        });\n\n        this.setState({\n            loading: false\n        });\n\n    }\n\n    async getCountryData(e){\n        if(e.target.value === \"Worldwide\"){\n            return this.getData();\n        }\n        try{\n            const res = await Axios.get(`https://covid19.mathdro.id/api/countries/${e.target.value}`);\n            this.setState({\n                confirmed: res.data.confirmed.value,\n                recovered: res.data.recovered.value,\n                deaths: res.data.deaths.value\n            });\n        }catch(err){\n            if(err.response.status === 404){\n                this.setState({\n                    confirmed: \"No Data Available\",\n                    recovered: \"No Data Available\",\n                    deaths: \"No Data Available\"\n                });\n            }\n        }\n    }\n\n    renderCountryOptions(){\n        return this.state.countries.map((country, i) => {\n        return <option key={i}>{ country }</option>\n        });\n    }\n\n    isLoading(){\n        if (this.state.loading) {return <Loader />}\n    }   \n\n    render(){\n        return (\n                <div className=\"container\">\n                    {this.isLoading()}\n                    <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Covid-19 Tracker</h1>\n\n                    <select name=\"\" className=\"dropDown\" onChange={this.getCountryData}>\n                        <option value=\"Worldwide\">Worldwide</option>\n                        <option value=\"US\">USA</option>\n                        {this.renderCountryOptions()}\n                    </select>\n                    <div className=\"flex\">\n                        <div className=\"box confirmed\">\n                            <h3>Confirmed cases:</h3>\n                            <h4>{this.state.confirmed}</h4>\n                        </div>\n                        <div className=\"box recovered\">\n                            <h3>Recovered cases:</h3>\n                            <h4>{this.state.recovered}</h4>\n                        </div>\n                        <div className=\"box deaths\">\n                            <h3>Deaths cases:</h3>\n                            <h4>{this.state.deaths}</h4>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}","import React from 'react';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport mapboxgl from 'mapbox-gl';\nimport '../style.css';\n\nconst data2 = require('../countries.json');\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZGluc2hwYXRpIiwiYSI6ImNqamRmMmVmNzN2ODQza3I1OWRnbDR0ODIifQ.ah5q68mTKeffMEh8C2zNYQ';\n\nfunction timer(ms) {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nfunction hasOneDayPassed(){\n  // get today's date. eg: \"7/37/2007\"\n  var date = new Date().toLocaleDateString() - 1;\n\n  // if there's a date in localstorage and it's equal to the above: \n  // inferring a day has yet to pass since both dates are equal.\n  if( localStorage.yourapp_date === date ) \n      return false;\n\n  // this portion of logic occurs when a day has passed\n  localStorage.yourapp_date = date;\n  return true;\n}\n\nexport default class Map extends React.Component {\n\n    state = {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        countries: [],\n        lng: 5,\n        lat: 34,\n        zoom: 1.2,\n        center: [0, 20],\n        countrylong: [],\n        countrylat: [],\n        colorArr: [],\n        countryCordList: [],\n        loading: true\n    }\n\n    async componentDidMount(){\n        this.getData();\n    }\n\n    async getData(){\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\n        const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n        const countries = [];\n        for(var i = 0; i < resCountries.data.countries.length; i++){\n            \n            countries.push(resCountries.data.countries[i].name);\n        }\n\n        this.setState({\n            confirmed: resApi.data.confirmed.value,\n            recovered: resApi.data.recovered.value,\n            deaths: resApi.data.deaths.value,\n            countries: countries\n        });\n\n        //initsilizing the map and getting cordinates\n        const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/dark-v10',\n            center: this.state.center,\n            zoom: this.state.zoom\n        });\n        const countrylong = [];\n        const countrylat = [];\n        const countryCordList = [];\n        for(var j = 0; j < this.state.countries.length; j++){\n            var inputValue = this.state.countries[j];\n            for(var l = 0; l < data2.length; l++){\n                if(inputValue === data2[l].name){\n                    countrylong.push(data2[l].latlng[1]);\n                    countrylat.push(data2[l].latlng[0]);\n                    countryCordList.push(this.state.countries[j]);\n                }\n            }\n            \n        }\n        \n        this.setState({\n            countrylong: countrylong,\n            countrylat: countrylat,\n            countryCordList: countryCordList\n            \n        });\n\n        this.setState({\n            loading: false\n        });\n\n        //run once a day\n        if(hasOneDayPassed()){\n        const colorArr = [];\n        for(let i = 0; i < this.state.countrylong.length; i++){\n\n            await fetch(`https://covid19.mathdro.id/api/countries/${this.state.countryCordList[i]}`).then(\n                response => response.json()).then(\n                    data =>{\n                    try{\n                        \n                        const confirmed = data.confirmed.value;\n\n                        if(confirmed === null || confirmed === undefined){\n                            colorArr.push('grey');\n                        }else{\n\n                            if(confirmed >= 200000){\n                                colorArr.push('#d422cb');\n                                new mapboxgl.Marker({\n                                    color: '#d422cb'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 100000){\n                                colorArr.push('#f43d46');\n                                new mapboxgl.Marker({\n                                    color: '#f43d46'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 50000){\n                                colorArr.push('#da7a3c');\n                                new mapboxgl.Marker({\n                                    color: '#da7a3c'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 10000){\n                                colorArr.push('#cac633');\n                                new mapboxgl.Marker({\n                                    color: '#cac633'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else if(confirmed >= 1000){\n                                colorArr.push('#44a2c2');\n                                new mapboxgl.Marker({\n                                    color: '#44a2c2'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }else{\n                                colorArr.push('grey');\n                                new mapboxgl.Marker({\n                                    color: 'grey'\n                                })\n                                .setLngLat([this.state.countrylong[i], this.state.countrylat[i]])\n                                .addTo(map);\n\n                            }\n                        }\n                    }catch(err){\n                        console.log(err);\n                        colorArr.push('grey');\n                    }\n                    }\n                );\n\n                await timer(600);\n        }\n        this.setState({\n            colorArr: colorArr\n        });\n\n    }\n\n        const colorArrConfirmed = this.state.colorArr;\n        //const colorArrConfirmed = [\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#da7a3c\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#da7a3c\",\"grey\",\"grey\",\"grey\",\"#da7a3c\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"#f43d46\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#f43d46\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"#f43d46\",\"grey\",\"grey\",\"grey\",\"#cac633\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"];\n\n        // for(var k = 0; k < this.state.countrylong.length; k++){\n            \n        //     // new mapboxgl.Marker({\n        //     //     color: colorArrConfirmed[k]\n        //     // })\n        //     // .setLngLat([this.state.countrylong[k], this.state.countrylat[k]])\n        //     // .addTo(map);\n        // }\n        // console.log(this.state.colorArr[0]);\n        // console.log(this.state.colorArr);\n\n        \n    }\n\n    async getColors(){\n\n        if(!hasOneDayPassed()){return false}\n\n        //use the buttom to get data \n        const colorArr = [];\n        for(let i = 0; i < this.state.countrylong.length; i++){\n\n            fetch(`https://covid19.mathdro.id/api/countries/${this.state.countryCordList[i]}`).then(\n                response => response.json()).then(\n                    data =>{\n                    try{\n                        \n                        const confirmed = data.confirmed.value;\n                        console.log(confirmed);\n\n                        if(confirmed === null || confirmed === undefined){\n                            colorArr.push('grey');\n                        }else{\n\n                            if(confirmed >= 200000){\n                                colorArr.push('#d422cb');\n                            }else if(confirmed >= 100000){\n                                colorArr.push('#f43d46');\n                            }else if(confirmed >= 50000){\n                                colorArr.push('#da7a3c');\n                            }else if(confirmed >= 10000){\n                                colorArr.push('#cac633');\n                            }else if(confirmed >= 1000){\n                                colorArr.push('#44a2c2');\n                            }else{\n                                colorArr.push('grey');\n                            }\n                        }\n                    }catch(err){\n                        console.log(err);\n                    }\n                    }\n                );\n                await timer(1000);\n        }\n        this.setState({\n            colorArr: colorArr\n        });\n    }\n\n    isLoading(){\n        if (this.state.loading) {return <Loader />}\n    }  \n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Covid-19 Map</h1>\n                <br/>\n                {this.isLoading()}\n                <div className=\"container2\">\n\n                <div className=\"outcome\">\n                <div className=\"mapKeyContainer\">\n                    <h4 className=\"mapTitle\">Number of infected people:</h4>\n                    <br/>\n                    <div className=\"keyHolder\">\n                    <div className=\"mapKeys\">\n                            <div className=\"color\"></div><h4 className=\"numOfPeople\"> > 200,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color1\"></div><h4 className=\"numOfPeople\"> > 100,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color2\"></div><h4 className=\"numOfPeople\"> > 50,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color3\"></div><h4 className=\"numOfPeople\"> > 10,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color5\"></div><h4 className=\"numOfPeople\"> > 1,000</h4>\n                        </div>\n                        <div className=\"mapKeys\">\n                            <div className=\"color4\"></div><h4 className=\"numOfPeople\"> &#60; 999</h4>\n                        </div>\n                    </div>\n                </div>\n                </div>\n                <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\n\n                </div>\n                \n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport '../style.css';\n\nexport default class App extends React.Component {\n\n    state = {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        countries: [],\n        countriesConfirmed: [],\n        countriesRecovered: [],\n        countriesDeaths: [],\n        top10Countries: [],\n        top10Confirmed: [],\n        loading: true\n    }\n\n    async componentDidMount(){\n        this.getData();\n        this.getCountryData();\n    }\n\n    async getData(){\n        const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\n        const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n        const countries = [];\n        for(var i = 0; i < resCountries.data.countries.length; i++){\n            \n            countries.push(resCountries.data.countries[i].name);\n        }\n\n        this.setState({\n            confirmed: resApi.data.confirmed.value,\n            recovered: resApi.data.recovered.value,\n            deaths: resApi.data.deaths.value,\n            countries: countries\n        });\n\n        //set loader to false/stop\n        this.setState({\n            loading: false\n        });\n    }\n\n    async getCountryData(){\n\n        const countriesConfirmed = [];\n        const countriesRecovered = [];\n        const countriesDeaths = [];\n\n        for(var i = 0; i < 179; i++){\n            try{\n                const res = await Axios.get(`https://covid19.mathdro.id/api/countries/${this.state.countries[i]}`);\n                countriesConfirmed.push(res.data.confirmed.value);\n                countriesRecovered.push(res.data.recovered.value);\n                countriesDeaths.push(res.data.deaths.value);\n                \n            }catch(err){\n                if(err.response.status === 404){\n                        countriesConfirmed.push(\"NaN\");\n                        countriesConfirmed.push(\"NaN\");\n                        countriesConfirmed.push(\"NaN\");\n                }\n            }\n        }\n\n        this.setState({\n            countriesConfirmed: countriesConfirmed,\n            countriesRecovered: countriesRecovered,\n            countriesDeaths: countriesDeaths\n        });\n\n        //Getting top 10\n        const confirmedCases = [];\n        confirmedCases.push(...countriesConfirmed);\n        confirmedCases.sort(function(a, b){return a-b});\n\n        let length = confirmedCases.length;\n        let top10 = confirmedCases.slice(Math.max(length - 10, 0))\n        const countryPosition = [];\n\n        for(let i = 0; i < this.state.countriesConfirmed.length; i++){\n            let current = this.state.countriesConfirmed[i];\n            for(let j = 0; j < top10.length; j++){\n                if(current === top10[j]){\n                    countryPosition.push(i);\n                }\n            }\n        }\n\n        this.setState({\n            top10Countries: countryPosition//,\n            // top10Confirmed: top10\n        });\n\n        \n    }\n\n    renderCountryOptions(){\n\n        // var top10 = new Array(2);\n        // top10[0] = this.state.top10Countries;\n        // top10[1] = this.state.top10Confirmed;\n        // top10.sort(function(a,b){\n        //     return a[1] - b[1];\n        // });\n\n        var top10 = []\n        top10 = this.state.top10Countries;\n\n        var top10Names = [];\n        var top10Confirmed = [];\n        //var orderedPositions = [];\n        \n        var returnStuff = [];\n        \n        for(let i = 0; i < top10.length; i++){\n            console.log(top10[i]);\n            top10Names.push(this.state.countries[top10[i]]);\n            top10Confirmed.push(this.state.countriesConfirmed[top10[i]]);\n        }\n\n        // for(let i = 0; i < this.state.countriesConfirmed.length; i++){\n        //     for(let j = 0; j < top10.length; j++){\n        //         if(this.state.countriesConfirmed[i] > top10Confirmed[j]){\n        //             console.log(this.state.countriesConfirmed[i] + \" > \" + top10Confirmed[j]);\n        //             console.log(i);\n        //         }\n        //     }\n        // }\n\n        return returnStuff;\n\n    }\n\n    //returnStuff.push(<li className=\"top10\" key={i}>{ this.state.countries[top10[i]] }</li>);\n\n    isLoading(){\n        if (this.state.loading) {return <Loader />}\n    } \n\n    render(){\n        return (\n                <div className=\"container\">\n                    {this.isLoading()}\n                    <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Stats</h1>\n\n                    <div className=\"container3\">\n                        <img src=\"https://covid19.mathdro.id/api/og\" alt=\"graph\" className=\"graphImage\"/>\n                        <hr/>\n                        <ul className=\"top10Container\">\n                            <h2>More comming soon!</h2>\n                            <br/>\n                        </ul>\n                    </div>\n                </div>\n        );\n    }\n}","import React from 'react';\nimport '../style.css';\n\nexport default class Dua extends React.Component {\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>Dua / Supplication</h1>\n                <div className=\"container4\">\n                    <h2 className=\"englishDua\">The Prophet Muhammad (May peace of Allah and His blessings be upon him) taught to recite the following Dua:</h2>\n                    <br/><hr/><br/>\n                    <h2 className=\"dua\">“اَللَّهُمُّ إِنِّيْ أَعُوذُ بِكَ مِنَ الْبَرَصِ وَالْجُنُونِ وَالْجُذَامِ، وَمِنْ سَيِّئِ الْأسْقَامِ.”( رَوَاهُ أَبو داود بإِسنادٍ صحيحٍ.)</h2>\n                    <br/><hr/><br/>\n                    <h2 className=\"dua1\">“Allahumma inni a’udhu bika minal-barasi, wal- jununi, wal-judhami, wa sayyi’il-asqaami”. (HR. Abu Dawud)</h2>\n                    <br/><hr/><br/>\n                    <h2 className=\"dua1\">“O Allah! I seek refuge in You from leucoderma [Vitiligo] , insanity, leprosy and evil/bad diseases” (Abu Dawud)</h2>\n                    <br/><br/>\n                    <br/><br/>\n                    <h2 className=\"englishDua\">Hadiths regarding plague: </h2><br/>\n                    <hr/>\n                    <br/>\n                    <h2 className=\"dua1\">The Prophet (may peace of Allah and His blessings be upon him) said, “If you hear of an outbreak of plague in a land, do not enter it; but if the plague breaks out in a place while you are in it, do not leave that place.”  (Reported by Al Bukhari)</h2>\n                    <br/>\n                    <hr/>\n                    <br/>\n                    <h2 className=\"dua1\">The Prophet of Allah (may peace of Allah and His blessings be upon him) said: The one who flees from the plague (infected territory) is like a fugitive from war, but whoever shows patience in that deserves a martyr’s reward. (Reported by Imam Musnad Ahmad ibn Hanbal)</h2>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport '../style.css';\n\nexport default class About extends React.Component {\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"mainHeader\"><img src=\"https://p3cdn4static.sharpschool.com/UserFiles/Servers/Server_1051846/Image/News/coronavirus.png\" alt=\".\" style={{maxWidth: '50px'}}/>About:</h1>\n                <div className=\"container4\" align='left'>\n                    <br/>\n                    <br/>\n                    <h2 className=\"headerAbout\">This is a covid-19 application that provides free opensource information regarding covid-19. The covid-19 data in this application is sourced from The Center for Systems Science and Engineering at John Hopkins University which is accessed through a Application Programming Interface (API) provided by @mathdroid.</h2>\n                    <br/>\n                    <h2 className=\"headerAbout\">Built with: HTML, CSS, Javascript, ReactJS, MapBox, and Postman</h2>\n                    <br/>\n                    <h2 className=\"headerAbout\">Built by: Din Spataj</h2>\n                    <h2 className=\"headerAbout\">www.dinshpati.com</h2>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            </div>\n        );\n    }\n\n}","import React from \"react\";\nimport \"./style.css\";\nimport Nav from './components/nav';\nimport Finder from './components/Finder';\nimport Map from './components/Map';\nimport Stats from './components/Stats';\nimport Dua from './components/Dua';\nimport About from './components/About';\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom';\n\n\nexport default class App extends React.Component {\n\n    render(){\n        return (\n            <HashRouter>\n                <div className=\"container\">\n                    <Nav />\n                    \n                    <Switch>\n                        <Route path=\"/\" exact component={Finder}/>\n                        <Route path=\"/map\" component={Map}/>\n                        <Route path=\"/stats\" component={Stats}/>\n                        <Route path=\"/dua\" component={Dua}/>\n                        <Route path=\"/about\" component={About}/>\n                    </Switch>\n                </div>\n        </HashRouter>\n        );\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//add to package.json \"homepage\": \"http://http://covid19.dinshpati.com/\",\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}